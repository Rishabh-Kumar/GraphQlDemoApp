{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","components/Spinner/Spinner.js","pages/Events.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","pages/Bookings.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","context","catch","err","console","log","createRef","className","onSubmit","this","htmlFor","type","id","ref","onClick","Component","contextType","AuthConext","modal","title","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","price","Date","date","toLocaleDateString","creatorId","onDetail","bind","eventId","eventList","events","map","_id","authUserId","creator","onViewDetail","spinner","EventsPage","creating","isLoading","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","Authorization","updatedEvents","push","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","fetchEvents","Fragment","rows","AuthContext","bookingList","bookings","booking","createdAt","onDelete","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","bookingChart","chartData","labels","datasets","values","bucket","filteredBookingsCount","reduce","prev","style","textAlign","bookingsControl","activeOutoutType","onChange","BookingsPage","outputType","fetchBookings","deleteBookingHandler","bookingId","filter","changeOutputTypeHandler","content","BookingsChart","mainNavigation","Consumer","to","App","Provider","exact","path","element","replace","Bookings","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1843703d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: (token, userId, tokenExpiration) => {},\r\n  logout: () => {},\r\n});\r\n","import React, { Component } from \"react\";\r\nimport \"./Auth.css\";\r\nimport AuthConext from \"../context/auth-context\";\r\n\r\nclass AuthPage extends Component {\r\n  state = {\r\n    isLogin: true,\r\n  };\r\n\r\n  static contextType = AuthConext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.emailEl = React.createRef();\r\n    this.passwordEl = React.createRef();\r\n  }\r\n\r\n  switchModeHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { isLogin: !prevState.isLogin };\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const email = this.emailEl.current.value;\r\n    const password = this.passwordEl.current.value;\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query Login($email: String!, $password:String!){\r\n          login(email: $email, password: $password) {\r\n            userId \r\n            token \r\n            tokenExpiration\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n    };\r\n\r\n    if (!this.state.isLogin) {\r\n      requestBody = {\r\n        query: `\r\n        mutation CreateUser($email: String!, $password:String!){\r\n          createUser(userInput: {email: $email, password: $password}) {\r\n            _id\r\n            email\r\n          }\r\n        }\r\n      `,\r\n        variables: {\r\n          email: email,\r\n          password: password,\r\n        },\r\n      };\r\n    }\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        if (resData.data.login.token) {\r\n          this.context.login(\r\n            resData.data.login.token,\r\n            resData.data.login.userId,\r\n            resData.data.login.tokenExpiration\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input type=\"email\" id=\"email\" ref={this.emailEl}></input>\r\n        </div>\r\n\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" ref={this.passwordEl}></input>\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={this.switchModeHandler}>\r\n            Switch To {this.state.isLogin ? \"SignUp\" : \"Login\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthPage;\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nconst modal = (props) => (\r\n  <div className=\"modal\">\r\n    <header className=\"modal__header\">\r\n      <h1>{props.title}</h1>\r\n    </header>\r\n    <section className=\"modal__content\">{props.children}</section>\r\n    <section className=\"modal__actions\">\r\n      {props.canCancel && (\r\n        <button className=\"btn\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n      )}\r\n      {props.canConfirm && (\r\n        <button className=\"btn\" onClick={props.onConfirm}>\r\n          {props.confirmText}\r\n        </button>\r\n      )}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default modal;\r\n","import React from \"react\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst backdrop = (props) => <div className=\"backdrop\"></div>;\r\n\r\nexport default backdrop;\r\n","import React from \"react\";\r\n\r\nimport \"./EventItem.css\";\r\n\r\nconst eventItem = (props) => (\r\n  <li key={props.eventId} className=\"events__list-item\">\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>\r\n        ${props.price} - {new Date(props.date).toLocaleDateString()}\r\n      </h2>\r\n    </div>\r\n    <div>\r\n      {props.userId === props.creatorId ? (\r\n        <p>Your the owner of this event.</p>\r\n      ) : (\r\n        <button\r\n          className=\"btn\"\r\n          onClick={props.onDetail.bind(this, props.eventId)}\r\n        >\r\n          View Details\r\n        </button>\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default eventItem;\r\n","import React from \"react\";\r\n\r\nimport EventItem from \"./EventItem/EventItem\";\r\nimport \"./EventList.css\";\r\n\r\nconst eventList = (props) => {\r\n  const events = props.events.map((event) => {\r\n    return (\r\n      <EventItem\r\n        key={event._id}\r\n        eventId={event._id}\r\n        title={event.title}\r\n        price={event.price}\r\n        date={event.date}\r\n        userId={props.authUserId}\r\n        creatorId={event.creator._id}\r\n        onDetail={props.onViewDetail}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <ul className=\"event__list\">{events}</ul>;\r\n};\r\n\r\nexport default eventList;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst spinner = () => (\r\n  <div className=\"spinner\">\r\n    <div className=\"lds-dual-ring\"></div>\r\n  </div>\r\n);\r\n\r\nexport default spinner;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport Backdrop from \"../components/Backdrop/Backdrop\";\r\nimport EventList from \"../components/Events/EventList/EventList\";\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport \"./Events.css\";\r\n\r\nclass EventsPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    events: [],\r\n    isLoading: false,\r\n    selectedEvent: null,\r\n  };\r\n\r\n  isActive = true;\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleElRef = React.createRef();\r\n    this.priceElRef = React.createRef();\r\n    this.dateElRef = React.createRef();\r\n    this.descriptionElRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEvents();\r\n  }\r\n\r\n  startCreateEventHandler = () => {\r\n    this.setState({ creating: true });\r\n  };\r\n\r\n  modalConfirmHandler = () => {\r\n    this.setState({ creating: false });\r\n    const title = this.titleElRef.current.value;\r\n    const price = +this.priceElRef.current.value;\r\n    const date = this.dateElRef.current.value;\r\n    const description = this.descriptionElRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const event = { title, price, date, description };\r\n    console.log(event);\r\n\r\n    const requestBody = {\r\n      query: `\r\n          mutation CreateEvent($title: String!, $description: String!, $price: Float!, $date: String!){\r\n            createEvent(eventInput: {title: $title, description: $description, price: $price, date: $date}) {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        title,\r\n        description,\r\n        date,\r\n        price,\r\n      },\r\n    };\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        this.setState((prevState) => {\r\n          const updatedEvents = [...prevState.events];\r\n          updatedEvents.push({\r\n            _id: resData.data.createEvent._id,\r\n            title: resData.data.createEvent.title,\r\n            description: resData.data.createEvent.description,\r\n            date: resData.data.createEvent.date,\r\n            price: resData.data.createEvent.price,\r\n            creator: {\r\n              _id: this.context.userId,\r\n            },\r\n          });\r\n          return { events: updatedEvents };\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false, selectedEvent: null });\r\n  };\r\n\r\n  fetchEvents() {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            events {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n              creator {\r\n                _id\r\n                email\r\n              }\r\n            }\r\n          }\r\n        `,\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        const events = resData.data.events;\r\n        if (this.isActive) {\r\n          this.setState({ events: events, isLoading: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        if (this.isActive) {\r\n          this.setState({ isLoading: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  showDetailHandler = (eventId) => {\r\n    this.setState((prevState) => {\r\n      const selectedEvent = prevState.events.find((e) => e._id === eventId);\r\n      return { selectedEvent: selectedEvent };\r\n    });\r\n  };\r\n\r\n  bookEventHandler = () => {\r\n    if (!this.context.token) {\r\n      this.setState({ selectedEvent: null });\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n          mutation BookEvent($id: ID!){\r\n                bookEvent(eventId: $id) {\r\n                  _id\r\n                  createdAt\r\n                  updatedAt\r\n                }\r\n              }\r\n        `,\r\n      variables: {\r\n        id: this.state.selectedEvent._id,\r\n      },\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        this.setState({ selectedEvent: null });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ selectedEvent: null });\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Event\"\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmHandler}\r\n            confirmText=\"Confirm\"\r\n          >\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  rows=\"4\"\r\n                  ref={this.descriptionElRef}\r\n                />\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.state.selectedEvent && (\r\n          <Modal\r\n            title={this.state.selectedEvent.title}\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.bookEventHandler}\r\n            confirmText={this.context.token ? \"Book\" : \"Confirm\"}\r\n          >\r\n            <h1>{this.state.selectedEvent.title}</h1>\r\n            <h2>\r\n              ${this.state.selectedEvent.price} -{\" \"}\r\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\r\n            </h2>\r\n            <p>{this.state.selectedEvent.description}</p>\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"events-control\">\r\n            <p>Share your own Events!</p>\r\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\r\n              Create Event\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <EventList\r\n            events={this.state.events}\r\n            authUserId={this.context.userId}\r\n            onViewDetail={this.showDetailHandler}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventsPage;\r\n","import React from \"react\";\r\nimport \"./BookingList.css\";\r\n\r\nconst bookingList = (props) => (\r\n  <ul className=\"bookings__list\">\r\n    {props.bookings.map((booking) => {\r\n      return (\r\n        <li key={booking._id} className=\"bookings__item\">\r\n          <div className=\"bookings__item-data\">\r\n            {booking.event.title} -{\" \"}\r\n            {new Date(booking.createdAt).toLocaleDateString()}\r\n          </div>\r\n          <div className=\"bookings__item-actions\">\r\n            <button\r\n              className=\"btn\"\r\n              onClick={props.onDelete.bind(this, booking._id)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default bookingList;\r\n","import React from \"react\";\r\nimport { Chart } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\n\r\nconst BOOKINGS_BUCKETS = {\r\n  Cheap: {\r\n    min: 0,\r\n    max: 100,\r\n  },\r\n  Normal: {\r\n    min: 100,\r\n    max: 200,\r\n  },\r\n  Expensive: {\r\n    min: 200,\r\n    max: 1000000,\r\n  },\r\n};\r\n\r\nconst bookingChart = (props) => {\r\n  const chartData = { labels: [], datasets: [] };\r\n  let values = [];\r\n  for (const bucket in BOOKINGS_BUCKETS) {\r\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\r\n      if (\r\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\r\n        current.event.price < BOOKINGS_BUCKETS[bucket].max\r\n      ) {\r\n        return prev + 1;\r\n      } else {\r\n        return prev;\r\n      }\r\n    }, 0);\r\n    values.push(filteredBookingsCount);\r\n    chartData.labels.push(bucket);\r\n    chartData.datasets.push({\r\n      data: values,\r\n    });\r\n    values = [...values];\r\n    values[values.length - 1] = 0;\r\n  }\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Chart type=\"bar\" data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default bookingChart;\r\n","import React from \"react\";\r\nimport \"./BookingsControls.css\";\r\n\r\nconst bookingsControl = (props) => {\r\n  return (\r\n    <div className=\"bookings-control\">\r\n      <button\r\n        className={props.activeOutoutType === \"list\" ? \"active\" : \"\"}\r\n        onClick={props.onChange.bind(this, \"list\")}\r\n      >\r\n        List\r\n      </button>\r\n      <button\r\n        className={props.activeOutoutType === \"chart\" ? \"active\" : \"\"}\r\n        onClick={props.onChange.bind(this, \"chart\")}\r\n      >\r\n        Chart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default bookingsControl;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport BookingList from \"../components/Bookings/BookingList/BookingList\";\r\nimport BookingsChart from \"../components/Bookings/BookingsChart/BookingsChart\";\r\nimport BookingsControls from \"../components/Bookings/BookingsControls/BookingsControls\";\r\n\r\nclass BookingsPage extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    bookings: [],\r\n    outputType: \"list\",\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  componentDidMount() {\r\n    this.fetchBookings();\r\n  }\r\n\r\n  fetchBookings = () => {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            bookings {\r\n              _id\r\n             createdAt\r\n             event {\r\n               _id\r\n               title\r\n               date\r\n               price\r\n             }\r\n            }\r\n          }\r\n        `,\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        const bookings = resData.data.bookings;\r\n        this.setState({ bookings: bookings, isLoading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n\r\n  deleteBookingHandler = (bookingId) => {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          mutation cancelBooking($id: ID!){\r\n            cancelBooking(bookingId: $id) {\r\n              _id\r\n              title\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        id: bookingId,\r\n      },\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        this.setState((prevState) => {\r\n          const updatedBookings = prevState.bookings.filter((booking) => {\r\n            return booking._id !== bookingId;\r\n          });\r\n          return { bookings: updatedBookings, isLoading: false };\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n\r\n  changeOutputTypeHandler = (outputType) => {\r\n    if (outputType === \"list\") {\r\n      this.setState({ outputType: \"list\" });\r\n    } else {\r\n      this.setState({ outputType: \"chart\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let content = <Spinner />;\r\n    if (!this.state.isLoading) {\r\n      content = (\r\n        <React.Fragment>\r\n          <BookingsControls\r\n            activeOutoutType={this.state.outputType}\r\n            onChange={this.changeOutputTypeHandler}\r\n          />\r\n          <div>\r\n            {this.state.outputType === \"list\" ? (\r\n              <BookingList\r\n                bookings={this.state.bookings}\r\n                onDelete={this.deleteBookingHandler}\r\n              />\r\n            ) : (\r\n              <BookingsChart bookings={this.state.bookings} />\r\n            )}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return <React.Fragment>{content}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default BookingsPage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./MainNavigation.css\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nconst mainNavigation = (props) => (\r\n  <AuthContext.Consumer>\r\n    {(context) => {\r\n      return (\r\n        <header className=\"main-navigation\">\r\n          <div className=\"main-navigation__logo\">\r\n            <h1>EasyEvent</h1>\r\n          </div>\r\n          <nav className=\"main-navigation__items\">\r\n            <ul>\r\n              {!context.token && (\r\n                <li>\r\n                  <NavLink to=\"/auth\">Authentication</NavLink>\r\n                </li>\r\n              )}\r\n              <li>\r\n                <NavLink to=\"/events\">Events</NavLink>\r\n              </li>\r\n              {context.token && (\r\n                <React.Fragment>\r\n                  <li>\r\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <button onClick={context.logout}>Logout</button>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n      );\r\n    }}\r\n  </AuthContext.Consumer>\r\n);\r\n\r\nexport default mainNavigation;\r\n","import \"./App.css\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Navigate,\r\n  Route,\r\n  Routes,\r\n} from \"react-router-dom\";\r\n\r\nimport AuthPage from \"./pages/Auth\";\r\nimport EventsPage from \"./pages/Events\";\r\nimport BookingsPage from \"./pages/Bookings\";\r\nimport MainNavigation from \"./components/Navigation/MainNavigation\";\r\nimport AuthContext from \"./context/auth-context\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    token: null,\r\n    userId: null,\r\n  };\r\n  login = (token, userId, tokenExpiration) => {\r\n    this.setState({ token: token, userId: userId });\r\n  };\r\n  logout = () => {\r\n    this.setState({ token: null, userId: null });\r\n  };\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Fragment>\r\n          <AuthContext.Provider\r\n            value={{\r\n              token: this.state.token,\r\n              userId: this.state.userId,\r\n              login: this.login,\r\n              logout: this.logout,\r\n            }}\r\n          >\r\n            <MainNavigation />\r\n            <main className=\"main-content\">\r\n              <Routes>\r\n                {this.state.token && (\r\n                  <Route\r\n                    exact\r\n                    path=\"/\"\r\n                    element={<Navigate replace to=\"/events\" />}\r\n                  />\r\n                )}\r\n                {this.state.token && (\r\n                  <Route\r\n                    exact\r\n                    path=\"/auth\"\r\n                    element={<Navigate replace to=\"/events\" />}\r\n                  />\r\n                )}\r\n                {!this.state.token && (\r\n                  <Route exact path=\"/auth\" element={<AuthPage />} />\r\n                )}\r\n                <Route exact path=\"/events\" element={<EventsPage />} />\r\n                {this.state.token && (\r\n                  <Route exact path=\"/bookings\" element={<BookingsPage />} />\r\n                )}\r\n                {!this.state.token && (\r\n                  <Route path=\"/*\" element={<Navigate replace to=\"/auth\" />} />\r\n                )}\r\n              </Routes>\r\n            </main>\r\n          </AuthContext.Provider>\r\n        </Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}